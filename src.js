function OrderStorage($q){"use strict";var STORAGE_ID="orders-storage",orders=[],_getFromLocalStorage=function(){return angular.fromJson(localStorage.getItem(STORAGE_ID)||"[]")},_saveToLocalStorage=function(todos){localStorage.setItem(STORAGE_ID,angular.toJson(todos))};return{clearCompleted:function(){var deferred=$q.defer(),incompleteTodos=orders.filter(function(todo){return!todo.completed});return angular.copy(incompleteTodos,orders),_saveToLocalStorage(orders),deferred.resolve(orders),deferred.promise},"delete":function(todo){var deferred=$q.defer();return orders.splice(orders.indexOf(todo),1),_saveToLocalStorage(orders),deferred.resolve(orders),deferred.promise},get:function(){var deferred=$q.defer();return angular.copy(_getFromLocalStorage(),orders),deferred.resolve(orders),deferred.promise},insert:function(todo){var deferred=$q.defer();return orders.push(todo),_saveToLocalStorage(orders),deferred.resolve(orders),deferred.promise},put:function(order,index){var deferred=$q.defer();return orders[orders.indexOf(order)]=order,_saveToLocalStorage(orders),deferred.resolve(orders),deferred.promise}}}function OrderListCtrl($scope,$routeParams,OrderService,ordersData){"use strict";var vm=this,TAP_COMPLETED="completed",TAP_ACTIVE="active";vm.orderService=OrderService,vm.isAllCompleted=OrderService.isAllOrderCompleted(),vm.orders=ordersData,$scope.$watch("OrderListCtrl.orders",function(){vm.remainingCount=OrderService.getNumOfActive(),vm.completedCount=OrderService.getNumOfCompleted(),vm.isAllCompleted=OrderService.isAllOrderCompleted()},!0),$scope.$on("$routeChangeSuccess",function(){vm.status=$routeParams.status||"",vm.statusFilter=vm.status===TAP_ACTIVE?{completed:!1}:vm.status===TAP_COMPLETED?{completed:!0}:{}}),$scope.$on("$destroy",function(){vm=null,$scope=null})}function OrderService(OrderStorage){"use strict";var newOrder={completed:!1,title:""},canceled=!1,orders=[],oldOrder=null,isCanceled=function(){return canceled},setIsCanceled=function(cancel){canceled=cancel};return{getNewOrder:function(){return newOrder},loadOrders:function(){return OrderStorage.get().then(function(ordersCollection){return orders=ordersCollection,orders.map(function(item){item.isEditMode=!1}),ordersCollection}.bind(this))},addOrder:function(){newOrder.title&&OrderStorage.insert(newOrder).then(function(){newOrder={completed:!1,title:""}})},removeOrder:function(order){OrderStorage["delete"](order)},clearCompletedOrders:function(){OrderStorage.clearCompleted()},updateOrder:function(order){OrderStorage.put(order).then(function(){},function(){})},editOrder:function($event,order){$event.stopPropagation(),order.isEditMode=!0,oldOrder=angular.extend({},order)},revertEdits:function($event,order){$event.stopPropagation(),order.title=oldOrder.title,order.isEditMode=!1,this.updateOrder(order),oldOrder=null,setIsCanceled(!0)},saveEdits:function($event,order){return $event.stopPropagation(),isCanceled()?void setIsCanceled(!1):order.title===oldOrder.title?void(order.isEditMode=!1):(order.title?this.updateOrder(order):this.removeOrder(order),void(order.isEditMode=!1))},markAll:function(isCompletedAll){isCompletedAll?orders.forEach(function(order){order.completed=!1,this.updateOrder(order)},this):orders.forEach(function(order){order.completed||(order.completed=!0,this.updateOrder(order))},this)},isAllOrderCompleted:function(){var ordersCompleted=orders.filter(function(order){return order.completed===!0});return ordersCompleted.length===orders.length},getNumOfActive:function(){return orders.filter(function(order){return order.completed===!1}).length},getNumOfCompleted:function(){return orders.filter(function(order){return order.completed===!0}).length}}}angular.module("orders",["ngRoute","orders.routes","ngMaterial"]),angular.module("orders.routes",["ngRoute"]).config(["$routeProvider",function($routeProvider){"use strict";var routeConfig={controller:"OrderListController",controllerAs:"OrderListCtrl",templateUrl:"js/templates/home.html",resolve:{ordersData:function(OrderService){return OrderService.loadOrders()}}};$routeProvider.when("/",routeConfig).when("/:status",routeConfig).otherwise({redirectTo:"/"})}]),angular.module("orders").factory("OrderStorage",["$q",OrderStorage]),angular.module("orders").controller("OrderListController",["$scope","$routeParams","OrderService","ordersData",OrderListCtrl]),angular.module("orders").directive("todoEscape",function(){"use strict";var ESCAPE_KEY=27;return function(scope,elem,attrs){elem.bind("keydown",function(event){event.keyCode===ESCAPE_KEY&&(scope.$apply(function(){scope.$eval(attrs.todoEscape,{$event:event})}),event.preventDefault())}),scope.$on("$destroy",function(){elem.unbind("keydown")})}}),angular.module("orders").directive("todoFocus",["$timeout",function($timeout){"use strict";return function(scope,element,attrs){scope.$watch(attrs.todoFocus,function(newVal){newVal&&$timeout(function(){element[0].focus()})})}}]),angular.module("orders").factory("OrderService",["OrderStorage",OrderService]);
//# sourceMappingURL=src.js.map
